import { ApiProperty } from '@nestjs/swagger';
import {
  IsString,
  IsNotEmpty,
  MaxLength,
  IsOptional,
  IsUUID,
  IsArray,
  ArrayNotEmpty,
} from 'class-validator';

export class CreateRecipeDto {
  @ApiProperty({
    description: 'Nom de la recette',
    example: 'Miel et eau ti√®de',
    maxLength: 200,
  })
  @IsString({ message: 'Le nom doit √™tre une cha√Æne de caract√®res' })
  @IsNotEmpty({ message: 'Le nom est obligatoire' })
  @MaxLength(200, {
    message: 'Le nom ne doit pas d√©passer 200 caract√®res',
  })
  name: string;

  @ApiProperty({
    description: 'Nom arabe de la recette',
    example: 'ÿßŸÑÿπÿ≥ŸÑ ŸàÿßŸÑŸÖÿßÿ° ÿßŸÑÿØÿßŸÅÿ¶',
    required: false,
  })
  @IsOptional()
  @IsString({ message: 'Le nom arabe doit √™tre une cha√Æne de caract√®res' })
  arabicName?: string;

  @ApiProperty({
    description: 'Description de la recette',
    example: 'Une boisson proph√©tique recommand√©e pour ses bienfaits',
  })
  @IsString({ message: 'La description doit √™tre une cha√Æne de caract√®res' })
  @IsNotEmpty({ message: 'La description est obligatoire' })
  description: string;

  @ApiProperty({
    description: 'Liste des ingr√©dients',
    example: [
      '1 cuill√®re √† soupe de miel',
      "1 verre d'eau ti√®de",
      '1 pinc√©e de cannelle (optionnel)',
    ],
    type: [String],
  })
  @IsArray({ message: 'Les ingr√©dients doivent √™tre un tableau' })
  @ArrayNotEmpty({ message: 'Au moins un ingr√©dient est requis' })
  @IsString({
    each: true,
    message: 'Chaque ingr√©dient doit √™tre une cha√Æne de caract√®res',
  })
  ingredients: string[];

  @ApiProperty({
    description: '√âtapes de pr√©paration',
    example: [
      "Chauffer l'eau √† temp√©rature ti√®de",
      'Ajouter le miel et m√©langer',
      'Boire imm√©diatement',
    ],
    type: [String],
  })
  @IsArray({ message: 'Les pr√©parations doivent √™tre un tableau' })
  @ArrayNotEmpty({ message: 'Au moins une √©tape de pr√©paration est requise' })
  @IsString({
    each: true,
    message: 'Chaque √©tape doit √™tre une cha√Æne de caract√®res',
  })
  preparations: string[];

  @ApiProperty({
    description: 'Source du hadith',
    example: 'Sahih Bukhari 5684',
    required: false,
  })
  @IsOptional()
  @IsString({
    message: 'La source du hadith doit √™tre une cha√Æne de caract√®res',
  })
  hadithSource?: string;

  @ApiProperty({
    description: 'Texte du hadith',
    example:
      'Le Proph√®te (Ô∑∫) a dit : "Le miel est un rem√®de pour toute maladie"',
    required: false,
  })
  @IsOptional()
  @IsString({
    message: 'Le texte du hadith doit √™tre une cha√Æne de caract√®res',
  })
  hadithText?: string;

  @ApiProperty({
    description: 'Usage et bienfaits',
    example: [
      '√Ä boire le matin √† jeun',
      'Aide √† la digestion',
      'Renforce le syst√®me immunitaire',
    ],
    type: [String],
    required: true,
  })
  @IsArray({ message: "L'usage doit √™tre un tableau" })
  @IsString({
    each: true,
    message: 'Chaque usage doit √™tre une cha√Æne de caract√®res',
  })
  usage: string[];

  @ApiProperty({
    description: 'Ic√¥ne de la recette',
    example: 'üçØ',
    required: false,
  })
  @IsOptional()
  @IsString({ message: "L'ic√¥ne doit √™tre une cha√Æne de caract√®res" })
  icon?: string;

  @ApiProperty({
    description: 'UUID de la cat√©gorie de recette',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  @IsString({ message: 'La cat√©gorie doit √™tre une cha√Æne de caract√®res' })
  @IsNotEmpty({ message: 'La cat√©gorie est obligatoire' })
  @IsUUID('4', { message: 'La cat√©gorie doit √™tre un UUID valide' })
  recipeCategoryUuid: string;
}
